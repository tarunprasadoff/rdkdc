function xi = getXi(g)

    % Computes the twist vector from a transformation matrix
    R = g(1:3, 1:3);
    p = g(1:3, 4);
    w = zeros(3, 1); % Initialize angular velocity

    % Check if the motion is purely translational
    if ( abs(det(R) - 1) < 0.001 ) && ( abs(sum( sum( abs( ( R ) - eye(3) ) ))) < 0.001 )
        theta = norm(p);
        v = p / theta;
    else
        % Compute the rotation angle
        theta = acos((trace(R) - 1) / 2);
        % Handle the special case where trace(R) == -1
        if trace(R) == -1
            idx = find(diag(R) ~= -1, 1);
            if isempty(idx)
                idx = 1;
            end
            w(idx) = 1;
            w = (1 / sqrt(2 * (1 + R(idx, idx)))) * (R(:, idx) + w);
        else
            % Standard computation of w
            w = (1 / (2 * sin(theta))) * [R(3, 2) - R(2, 3); R(1, 3) - R(3, 1); R(2, 1) - R(1, 2)];
        end
        % Calculate linear velocity
        A = ((eye(3) - R) * SKEW3(w) + w * w' * theta);
        v = A \ p;
    end

    % Assemble the twist vector
    xi = [v; w] * theta;
end